The university requires a timestamped submission of the final version of your work to be submitted via Blackboard. You should therefore create a zip archive of your entire Maven project (the `cw-db` folder) and upload this via the `Assessment, submission and feedback` section on this unit's Blackboard page. It is essential that you ensure your code compiles and runs on the lab machines using `mvnw` before you submit it.

Your submission will be assessed on the success with which it implements the described query language, as well as the flexibility and robustness with which it operates. 
You should make sure your code can respond to _at the very least_ the "standard" query spacing (as illustrated in the 
<a href="resources/example-transcript.docx" target="_blank">example transcript</a>).
As with any real implementation of SQL, you should also however support variability of whitespace.
Remember that different users may use different spacing standards and styles - it is desirable to support them, not constrain them !

Make sure that your code does not contain anything specific to your computer or platform (e.g. absolute file paths, operating system specific code etc).
Before submitting your code, we advise your to test your project on a computer _other than the one it was developed on_.
If you developed your code on your own computer, make sure it operates correctly on the lab machines.
If you developed your code on the lab machines, make sure it operates correctly on another platform (e.g. ideally a Windows computer - if you have access to one).
Clear out all files from the `databases` folder and then ensure the code compiles and runs correctly with Maven (using: `mvnw clean compile test`).
We will apply a penalty mark if we cannot run your code "out of the box" - we can't spend time "fixing" everyones projects before we mark them !

It is VERY important that you do NOT change the name or parameters of any of the classes and methods that you have been given.
Scripts will be used to automatically run your code to make sure it operates correctly - if you rename somethings you shouldn't, we won't be able to mark your code !
Your main class MUST be called `DBServer` and should not change the signature of the constructor or the `handleCommand` method. It is **ESSENTIAL** that you check your code passes the original skeleton test script - if it does not pass these basic tests then your code will not pass any of the marking test scripts.

Remember that this unit is not just about assessing the operation of executable code - we are also interested in wider "development" issues. Remember that your submission will be assessed on "code quality" as outlined in the lectures. Finally, remember that we are interested in your _process_ as well as the _final product_ - for this reason, we will be exploring your GitHub repository during the marking process.

